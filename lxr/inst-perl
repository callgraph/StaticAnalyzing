#!/usr/bin/perl 
# $Id: find,v 1.3 1998/04/30 11:58:16 argggh Exp $

# find   --	Find files
#
#	Arne Georg Gleditsch <argggh@ifi.uio.no>
#	Per Kristian Gjermshus <pergj@ifi.uio.no>
#
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

######################################################################

#use lib 'lib/';
#use LXR::Common;
#use LXR::Config;
#use strict;
#use LXR::Common;
#use LXR::Markup;
#use LXR::Template;
#use Local;
#use FileHandle;

#use CGI qw(:all); 
my $path0=$ARGV[3];
my $path1=$ARGV[4];
my $sourceroot=$ARGV[6];
my $sh_ruby_source=$ARGV[7];
my $depth=$ARGV[5];
my $baseurl=$ARGV[8];
my $ddir=$ARGV[9];
my $ver_v=$ARGV[0];
my $ver_a=$ARGV[1];
my $ver_f=$ARGV[2];
my $dbdir;

#	print("<br>Start of Script \"inst-perl\"<br>");
#	print("<br>SourceCodeVersion=".$ver_v."<br>Platform=".$ver_a."<br>FolderType=".$ver_f."<br>TestcaseName=".$path0."<br>baseurl=".$baseurl."<br>");
	$dbdir=sprintf($ddir."\/".$ver_v."\/".$ver_a."\/");

#if ($che1 ne "t1") {$c1=0;}     else {$c1=1;}



	$temp_sh=sprintf($sh_ruby_source.".\/taint-trace.rb");    
  #    $temp_pic=sprintf($sh_ruby_source.".\/pic.rb");     
  #    $temp_zoom=sprintf($sh_ruby_source.".\/amplify.rb");
  #    $graph_moudle=63;
  #    $zoom_module=$c1;
  #     $result_link_name=$baseurl;      
      

	$file_name=sprintf($ver_f."-".$path0."-".$path1."-".$depth."-trace");
	$file_name=~s/\//_/g;
	$temp_source0= sprintf($dbdir.$file_name.".graph");
	$temp_source1= sprintf($dbdir.$file_name.".svg");

#	$result_link_name=sprintf($baseurl."\/source1"."\/".$ver_v."\/".$ver_a."\/");
#	$result_link_name=sprintf("/usr/local/apache-tomcat-7.0.56/webapps/ROOT/mym_test/test-music.sikuli/index_page.html");
	$result_link_name=sprintf("http://124.16.141.184:8080/mym_test/".$path0."/index_page.html");
#	$result_link_name=sprintf("http://124.16.141.184:8080/mym_test/".$path0."/v_all_sort.html");
	$result_file_name=sprintf("/usr/local/apache-tomcat-7.0.56/webapps/ROOT/mym_test/".$path0."/index_page.html");

# $file_name=sprintf("/source1/kdb_read");

	my $oldtime = time();

	if ($path0 ne "NULL" and $path1 ne "NULL")
	{
		system("$temp_sh $depth $path0 $path1 $temp_source0 $ver_v $ver_a $ver_f"); 
		system("dot -Tsvg $temp_source0 -o $temp_source1");
	}

	my $oo=time()-$oldtime;
	print "Script \"inst-perl\": Run time is $oo second\n";
	if ( $ver_v ne "linux-3.5.4" or $ver_f ne "real" or $ver_a ne "x86_32") {
		print ("<br>Command parameter is wrong.<br>");
	} elsif ( -e $result_file_name )
	{
#		print ("<br> <embed src=\"",$result_link_name,"\"  style=\"margin:0 10px 0 0;\"/>\n ");
		print ("<br> <embed src=\"",$result_link_name,"\" height=\"100%\" width=\"100%\"  />\n ");
        	print("<hr>\n");
	} else
	{
		print ("<br>The file \"".$result_link_name."\" isn't exist.<br>");
	}


