#!/usr/bin/perl -T
# $Id: diff,v 1.31 2013/01/11 14:43:47 ajlittoz Exp $

# diff --	Display diff output with markup.
#
#	Arne Georg Gleditsch <argggh@ifi.uio.no>
#	Per Kristian Gjermshus <pergj@ifi.uio.no>
#
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

######################################################################

$CVSID = '$Id: diff,v 1.31 2013/01/11 14:43:47 ajlittoz Exp $ ';

#use strict;
use lib do { $0 =~ m{(.*)/} ? "$1/lib" : "lib" }; # if LXR modules are in ./lib

use LXR::Common;
use LXR::Markup;
use LXR::Template;
use Local;
use FileHandle;
sub binder{        
print("<form memethod=get action=\"binder\"> <input type=\"hidden\" name=\"v\" value=\"",$ENV{'QUERY_STRINGSID'},"\">");
print("<input type=\"hidden\" name=\"f\" value=\"",$ENV{'QUERY_STRINGFID'},"\">");
print("<input type=\"hidden\" name=\"a\" value=\"",$ENV{'QUERY_STRINGPID'},"\">");
print("Test name: <input type=text name=\"test_name\" ","value=\"",$test_name,"\" size=20 >\n");
print("Start Position: <input type=number name=\"start_position\" ","value=\"",$start_position,"\" size=20 >\n");
print("End Position: <input type=number name=\"end_position\" ","value=\"",$end_position,"\" size=20 >\n");
print("<input type=submit value=\"showbinder\">\n","</form>\n");
#$sid=$ENV{'QUERY_STRINGSID'};
#$pid=$ENV{'QUERY_STRINGPID'};
        if ( $start_position eq ""){
                $start_position= sprintf("0");
        }
        if ( $end_position eq "") {
#		$end_position= sprintf("500");
                $end_position= $start_position + 500;
        }
        if ( $test_name eq "") {
                $end_position= sprintf("default");
        }
	if ($start_position ne "" and $end_position ne "" and $ENV{'QUERY_STRINGFID'} ne "" ){
#     		print("showbinder");	
	$ttbasurl=sprintf("http://124.16.141.184/lxr");
	$temp_sh=$config->sourceroot;
 	$temp_shrb=$temp_sh;
 	$temp_shrb=~s/source\//lxr\/.\/binder-perl/;
 	$temp_shsp=$temp_sh;
 	$temp_shsp=~s/source\//lxr\/source1\/binder/;
 	$temp_shy=$temp_sh;
 	$temp_shy=~s/source/lxr\//;
	if ( $checked eq "" ){
		$checked=sprintf("0");
	}
#	print("<br>CommandName=".$temp_shrb."<br>Code Version=".$ENV{'QUERY_STRINGSID'}."<br>Platform=".$ENV{'QUERY_STRINGPID'}."<br>FolderType=".$ENV{'QUERY_STRINGFID'}."<br>Test name=".$test_name."<br>Start position=".$start_position."<br>End position=".$end_position."<br>****".$temp_shsp." ".$temp_shy." ".$ttbasurl." ".$temp_shsp."<br>");
	system("$temp_shrb $ENV{'QUERY_STRINGSID'} $ENV{'QUERY_STRINGPID'} $ENV{'QUERY_STRINGFID'} $start_position $end_position $test_name $temp_shsp $temp_shy $ttbasurl $temp_shsp $checked");
	}
	else
	{
		printf("Warning in Script binder: Command parameter is wrong.");
#}
	}
}

httpinit;
$start_position =$HTTP->{'param'}->{'start_position'};
$end_position =$HTTP->{'param'}->{'end_position'};
$test_name=$HTTP->{'param'}->{'test_name'};
$checked=$HTTP->{'param'}->{'checkbox1'};
$sid=$HTTP->{'param'}->{'v'};
makeheader('binder');
&binder;
makefooter('binder');

httpclean;

